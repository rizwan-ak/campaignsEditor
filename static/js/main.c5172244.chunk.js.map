{"version":3,"sources":["redux/actions/ActionTypes.js","redux/actions/ActionCreator.js","components/Header.js","pages/AddCampaign.js","pages/Campaigns.js","routes/index.js","redux/reducers/RootReducer.js","redux/store/Store.js","utils/Theme.js","App.js","serviceWorker.js","index.js"],"names":["activateCampaign","id","val","dispatch","a","axios","post","type","ActionTypes","Header","state","showCancelModal","showSaveModal","copied","reorder","anchorEl","handleClick","event","setState","currentTarget","handleClose","this","props","hideSearch","TextField","className","placeholder","variant","size","Button","showSave","style","float","color","onClick","Block","saveFn","Save","to","reorderCampaigns","reorderData","Add","pathname","campaign","disabled","hideOptions","Edit","aria-controls","aria-haspopup","KeyboardArrowDown","Menu","keepMounted","open","Boolean","onClose","MenuItem","deleteCampaign","ImportExport","Dialog","DialogTitle","DialogContent","dividers","Typography","gutterBottom","DialogActions","text","onCopy","code","marginLeft","xmlns","width","height","viewBox","d","Component","connect","delete","data","console","log","AddCampaign","showModal","modalTitle","modalBody","name","startDate","Date","endDate","countries","currencies","isActive","priority","discountPercentage","actionTypeName","conditionsTypeName","numberOfUsages","handleChange","e","target","value","onCountriesChange","values","onCurrenciesChange","location","action","conditions","Object","keys","voucherCodes","typeName","getCountries","getCurrencies","getConditionTypes","getActionTypes","addCampaign","Grid","container","direction","justify","alignItems","fullWidth","onChange","defaultValue","Autocomplete","autoHighlight","filterSelectedOptions","options","getOptionLabel","option","renderOption","Fragment","renderInput","params","Select","actionTypes","map","key","OutlinedInput","endAdornment","InputAdornment","position","IconButton","edge","conditionTypes","get","payload","Campaigns","selectedIndex","active","campaigns","getCampaigns","that","dragProps","onDragEnd","fromIndex","toIndex","item","splice","nodeSelector","handleSelector","m","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","c","index","getCampaign","Switch","checked","Routes","path","exact","initialState","store","createStore","applyMiddleware","thunk","createMuiTheme","shadows","palette","primary","main","contrastText","secondary","App","ThemeProvider","theme","MyTheme","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c5172244.chunk.js","sourcesContent":["export default {\n  POST_CAMPAIGN: \"POST_CAMPAIGN\",\n  UPDATE_CAMPAIGN: \"UPDATE_CAMPAIGN\",\n  DELETE_CAMPAIGN: \"DELETE_CAMPAIGN\",\n  ACTIVATE_CAMPAIGN: \"ACTIVATE_CAMPAIGN\",\n  GET_CAMPAIGNS: \"GET_CAMPAIGNS\",\n  REORDER_CAMPAIGNS: \"REORDER_CAMPAIGNS\",\n  GET_CAMPAIGN: \"GET_CAMPAIGN\",\n  GET_COUNTRIES: \"GET_COUNTRIES\",\n  GET_CURRENCIES: \"GET_CURRENCIES\",\n  GET_CONDITION_TYPES: \"GET_CONDITION_TYPES\",\n  GET_ACTION_TYPES: \"GET_ACTION_TYPES\",\n};\n","import ActionTypes from \"./ActionTypes\";\nimport axios from \"axios\";\n\nexport const getCampaigns = () => {\n  return async (dispatch) => {\n    const campaigns = await axios.get(\n      \"http://eleikoab.test.workplace.nu/admin/api/campaigns\"\n    );\n    dispatch({\n      type: ActionTypes.GET_CAMPAIGNS,\n      payload: campaigns.data,\n    });\n  };\n};\n\nexport const getCampaign = (id) => {\n  return async (dispatch) => {\n    const campaign = await axios.get(\n      `http://eleikoab.test.workplace.nu/admin/api/campaigns/${id}`\n    );\n    dispatch({\n      type: ActionTypes.GET_CAMPAIGN,\n      payload: campaign.data,\n    });\n  };\n};\n\nexport const deleteCampaign = (id) => {\n  return async (dispatch) => {\n    await axios.delete(\n      `http://eleikoab.test.workplace.nu/admin/api/campaigns/${id}`\n    );\n    dispatch({\n      type: ActionTypes.DELETE_CAMPAIGN,\n    });\n  };\n};\nexport const activateCampaign = (id, val) => {\n  return async (dispatch) => {\n    await axios.post(\n      `http://eleikoab.test.workplace.nu/admin/api/campaigns/${id}/activate/${val}`\n    );\n    dispatch({\n      type: ActionTypes.ACTIVATE_CAMPAIGN,\n    });\n  };\n};\n\nexport const addCampaign = (data) => {\n  return async (dispatch) => {\n    await axios.post(\"http://eleikoab.test.workplace.nu/admin/api/campaigns\", {\n      id: data.id,\n      action: {\n        discountPercentage: data.discountPercentage,\n        typeName: data.actionTypeName,\n      },\n      conditions: [\n        {\n          voucherCodes: {\n            [data.code]: data.numberOfUsages,\n          },\n          typeName: data.conditionsTypeName,\n        },\n      ],\n      name: data.name,\n      priority: 0,\n      isActive: false,\n      startDate: data.startDate,\n      endDate: data.endDate,\n      currencies: [\n        {\n          id: data.currencies.id,\n          code: data.currencies.code,\n        },\n      ],\n      countries: [\n        {\n          id: data.countries.id,\n          code: data.countries.code,\n          name: data.countries.name,\n        },\n      ],\n    });\n\n    dispatch({\n      type: ActionTypes.POST_CAMPAIGN,\n    });\n  };\n};\n\nexport const reorderCampaigns = (data) => {\n  return async (dispatch) => {\n    console.log(data);\n    await axios.post(\n      \"http://eleikoab.test.workplace.nu/admin/api/campaigns/sort\",\n      {\n        data,\n      }\n    );\n\n    dispatch({\n      type: ActionTypes.REORDER_CAMPAIGNS,\n    });\n  };\n};\n\nexport const getCountries = () => {\n  return async (dispatch) => {\n    const countries = await axios.get(\n      \"http://eleikoab.test.workplace.nu/admin/api/countries\"\n    );\n    dispatch({\n      type: ActionTypes.GET_COUNTRIES,\n      payload: countries.data,\n    });\n  };\n};\n\nexport const getCurrencies = () => {\n  return async (dispatch) => {\n    const currencies = await axios.get(\n      \"http://eleikoab.test.workplace.nu/admin/api/currencies\"\n    );\n    dispatch({\n      type: ActionTypes.GET_CURRENCIES,\n      payload: currencies.data,\n    });\n  };\n};\nexport const getConditionTypes = () => {\n  return async (dispatch) => {\n    const conditionTypes = await axios.get(\n      \"http://eleikoab.test.workplace.nu/admin/api/campaigns/conditiontypes\"\n    );\n    dispatch({\n      type: ActionTypes.GET_CONDITION_TYPES,\n      payload: conditionTypes.data,\n    });\n  };\n};\nexport const getActionTypes = () => {\n  return async (dispatch) => {\n    const actionTypes = await axios.get(\n      \"http://eleikoab.test.workplace.nu/admin/api/campaigns/actiontypes\"\n    );\n    dispatch({\n      type: ActionTypes.GET_ACTION_TYPES,\n      payload: actionTypes.data,\n    });\n  };\n};\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  MenuItem,\r\n  Menu,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Edit,\r\n  ImportExport,\r\n  Add,\r\n  KeyboardArrowDown,\r\n  Block,\r\n  Save,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteCampaign,\r\n  activateCampaign,\r\n  reorderCampaigns,\r\n} from \"../redux/actions/ActionCreator\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    showCancelModal: false,\r\n    showSaveModal: false,\r\n    copied: false,\r\n    reorder: false,\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.hideSearch ? null : (\r\n          <>\r\n            <TextField\r\n              className=\"marginRight noBorder\"\r\n              placeholder=\"enter\"\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n            <Button className=\"noBorder\" variant=\"contained\">\r\n              Search\r\n            </Button>\r\n          </>\r\n        )}\r\n        {this.props.showSave ? (\r\n          <div style={{ float: \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"marginRight noBorder\"\r\n              color=\"secondary\"\r\n              onClick={() => this.setState({ showCancelModal: true })}\r\n            >\r\n              <Block className=\"marginRight\" /> Cancel\r\n            </Button>\r\n\r\n            <Button\r\n              className=\"noBorder\"\r\n              onClick={() => {\r\n                this.props.saveFn();\r\n                this.setState({ showSaveModal: true });\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              <Save className=\"marginRight\" /> Save\r\n            </Button>\r\n          </div>\r\n        ) : this.state.reorder ? (\r\n          <div style={{ float: \"right\" }}>\r\n            <Link to=\"/\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"marginRight noBorder\"\r\n                onClick={() => {\r\n                  this.props.reorder(false);\r\n                  this.setState({ reorder: false });\r\n                }}\r\n                color=\"secondary\"\r\n              >\r\n                <Block className=\"marginRight\" /> Cancel\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/\">\r\n              <Button\r\n                className=\"noBorder\"\r\n                onClick={async () => {\r\n                  await this.props.reorderCampaigns(this.props.reorderData);\r\n                  this.props.reorder(false);\r\n                  this.setState({ reorder: false });\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                <Save className=\"marginRight\" /> Save\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div style={{ float: \"right\" }}>\r\n            <Link to=\"/addCampaign\">\r\n              <Button className=\"noBorder marginRight\" variant=\"contained\">\r\n                <Add className=\"marginRight\" />\r\n                Add\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link\r\n              to={{\r\n                pathname: \"/addCampaign\",\r\n                campaign: this.props.campaign,\r\n              }}\r\n            >\r\n              <Button\r\n                disabled={this.props.hideOptions}\r\n                variant=\"contained\"\r\n                className=\"marginRight noBorder\"\r\n              >\r\n                <Edit className=\"marginRight\" /> Edit\r\n              </Button>\r\n            </Link>\r\n\r\n            <Button\r\n              disabled={this.props.hideOptions}\r\n              variant=\"contained\"\r\n              className=\"marginRight noBorder\"\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={(event) => this.handleClick(event)}\r\n            >\r\n              <KeyboardArrowDown className=\"marginRight\" />\r\n              Actions\r\n            </Button>\r\n\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={this.state.anchorEl}\r\n              keepMounted\r\n              open={Boolean(this.state.anchorEl)}\r\n              onClose={() => this.handleClose()}\r\n            >\r\n              <MenuItem\r\n                onClick={() => this.props.activateCampaign(this.props.id, true)}\r\n              >\r\n                Activate\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() =>\r\n                  this.props.activateCampaign(this.props.id, false)\r\n                }\r\n              >\r\n                Deactivate\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => this.props.deleteCampaign(this.props.id)}\r\n              >\r\n                Delete\r\n              </MenuItem>\r\n            </Menu>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                this.props.reorder(true);\r\n                this.setState({ reorder: true });\r\n              }}\r\n              className=\"noBorder\"\r\n              variant=\"contained\"\r\n            >\r\n              <ImportExport className=\"marginRight\" /> Reorder\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {/* //Cancel Modal */}\r\n        <Dialog open={this.state.showCancelModal}>\r\n          <DialogTitle>Cancel</DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>\r\n              Are you sure you want to cancel? Your changes will not be saved.\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Link to=\"/\">\r\n              <Button\r\n                className=\"noBorder marginRight\"\r\n                onClick={() => this.setState({ showCancelModal: false })}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/\">\r\n              <Button\r\n                className=\"noBorder\"\r\n                onClick={() => this.setState({ showCancelModal: false })}\r\n                variant=\"contained\"\r\n              >\r\n                Stay\r\n              </Button>\r\n            </Link>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* //Discount Modal */}\r\n        <Dialog open={this.state.showSaveModal}>\r\n          <DialogTitle>Discount Code Saved</DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>\r\n              Your disount code is now saved and activated.\r\n              <br />\r\n              From: <span className=\"boldText\">2020-09-15 - 2020-10-15</span>\r\n              <br />\r\n              Countries: <span className=\"boldText\">SE, DK, US, CA</span>\r\n              <br />\r\n              Currencies: <span className=\"boldText\">SEK, DKK, SEK, CAD</span>\r\n              <br />\r\n            </Typography>\r\n            <div>\r\n              <CopyToClipboard\r\n                className=\"marginTop\"\r\n                text=\"PROMO80\"\r\n                onCopy={() => this.setState({ copied: true })}\r\n              >\r\n                <Button variant=\"outlined\">\r\n                  {this.props.code}\r\n                  <svg\r\n                    style={{ marginLeft: 30 }}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\r\n                  </svg>\r\n                </Button>\r\n              </CopyToClipboard>\r\n              {this.state.copied ? <span>Copied.</span> : null}\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Link to=\"/\">\r\n              <Button\r\n                className=\"noBorder\"\r\n                onClick={() => this.setState({ showSaveModal: false })}\r\n                variant=\"contained\"\r\n              >\r\n                Ok\r\n              </Button>\r\n            </Link>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteCampaign: (id) => dispatch(deleteCampaign(id)),\r\n    reorderCampaigns: (id) => dispatch(reorderCampaigns(id)),\r\n    activateCampaign: (id, val) => dispatch(activateCampaign(id, val)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Header);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCountries,\r\n  getCurrencies,\r\n  getActionTypes,\r\n  getConditionTypes,\r\n  addCampaign,\r\n} from \"../redux/actions/ActionCreator\";\r\n\r\nclass AddCampaign extends Component {\r\n  state = {\r\n    showModal: false,\r\n    modalTitle: \"\",\r\n    modalBody: \"\",\r\n    name: \"\",\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    countries: null,\r\n    currencies: null,\r\n    isActive: false,\r\n    priority: \"\",\r\n    discountPercentage: \"\",\r\n    actionTypeName: \"\",\r\n    conditionsTypeName: \"\",\r\n    code: \"\",\r\n    numberOfUsages: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.location.campaign) {\r\n      const {\r\n        id,\r\n        name,\r\n        startDate,\r\n        endDate,\r\n        action,\r\n        conditions,\r\n        countries,\r\n        currencies,\r\n      } = this.props.location.campaign;\r\n      const code = Object.keys(conditions[0].voucherCodes)[0];\r\n      const numberOfUsages = conditions[0].voucherCodes[code];\r\n      this.setState({\r\n        id,\r\n        name,\r\n        startDate,\r\n        endDate,\r\n        code,\r\n        numberOfUsages,\r\n        discountPercentage: action.discountPercentage,\r\n        actionTypeName: action.typeName,\r\n        conditionsTypeName: conditions[0].typeName,\r\n        countries: countries[0],\r\n        currencies: currencies[0],\r\n      });\r\n    }\r\n    this.props.getCountries();\r\n    this.props.getCurrencies();\r\n    this.props.getConditionTypes();\r\n    this.props.getActionTypes();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onCountriesChange = (event, values) => {\r\n    this.setState({\r\n      countries: values,\r\n    });\r\n  };\r\n  onCurrenciesChange = (event, values) => {\r\n    this.setState({\r\n      currencies: values,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header\r\n          showSave\r\n          hideSearch\r\n          saveFn={() => this.props.addCampaign(this.state)}\r\n          code={this.state.code}\r\n        />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <div className=\"marginRight\">\r\n            <h4>Information</h4>\r\n            <div>\r\n              <TextField\r\n                fullWidth\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Name\"\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                fullWidth\r\n                name=\"startDate\"\r\n                value={this.state.startDate}\r\n                onChange={this.handleChange}\r\n                variant=\"outlined\"\r\n                className=\"marginTop\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                fullWidth\r\n                name=\"endDate\"\r\n                value={this.state.endDate}\r\n                onChange={this.handleChange}\r\n                variant=\"outlined\"\r\n                className=\"marginTop\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24\"\r\n              />\r\n            </div>\r\n\r\n            <Autocomplete\r\n              fullWidth\r\n              autoHighlight\r\n              filterSelectedOptions\r\n              className=\"marginTop\"\r\n              value={this.state.countries}\r\n              onChange={this.onCountriesChange}\r\n              options={this.props?.countries}\r\n              getOptionLabel={(option) => option.name}\r\n              renderOption={(option) => (\r\n                <React.Fragment>{option.name}</React.Fragment>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  placeholder=\"Country\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Autocomplete\r\n              fullWidth\r\n              name=\"currencies\"\r\n              value={this.state.currencies}\r\n              onChange={this.onCurrenciesChange}\r\n              autoHighlight\r\n              className=\"marginTop\"\r\n              options={this.props?.currencies}\r\n              getOptionLabel={(option) => option.code}\r\n              renderOption={(option) => (\r\n                <React.Fragment>{option.code}</React.Fragment>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  placeholder=\"Currency\"\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"marginRight\">\r\n            <h4>Action</h4>\r\n            <div>\r\n              <Select\r\n                name=\"actionTypeName\"\r\n                value={this.state.actionTypeName}\r\n                onChange={this.handleChange}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                {this.props.actionTypes.map((action) => (\r\n                  <MenuItem value={action.key}>{action.value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n            <div>\r\n              <OutlinedInput\r\n                className=\"marginTop\"\r\n                name=\"discountPercentage\"\r\n                value={this.state.discountPercentage}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Order Discount %\"\r\n                endAdornment={\r\n                  <InputAdornment\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showModal: true,\r\n                        modalTitle: \"Order Discount %\",\r\n                        modalBody:\r\n                          \"This discount will be apply to the order total excluding VAT and Shipment.\",\r\n                      })\r\n                    }\r\n                    position=\"end\"\r\n                  >\r\n                    <IconButton edge=\"end\">\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h4>Condition</h4>\r\n            <div>\r\n              <Select\r\n                name=\"conditionsTypeName\"\r\n                value={this.state.conditionsTypeName}\r\n                onChange={this.handleChange}\r\n                placeholder=\"asd\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                {this.props.conditionTypes.map((action) => (\r\n                  <MenuItem value={action.key}>{action.value}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n            <div>\r\n              <OutlinedInput\r\n                name=\"code\"\r\n                value={this.state.code}\r\n                onChange={this.handleChange}\r\n                className=\"marginTop\"\r\n                placeholder=\"Code\"\r\n                endAdornment={\r\n                  <InputAdornment\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showModal: true,\r\n                        modalTitle: \"Campaign Code\",\r\n                        modalBody:\r\n                          \"The user needs to fill in the campaigncode to get the discount The code is CASE SENSITIVE.\",\r\n                      })\r\n                    }\r\n                    position=\"end\"\r\n                  >\r\n                    <IconButton edge=\"end\">\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              <OutlinedInput\r\n                name=\"numberOfUsages\"\r\n                value={this.state.numberOfUsages}\r\n                onChange={this.handleChange}\r\n                className=\"marginTop\"\r\n                type=\"number\"\r\n                placeholder=\"Number of usages\"\r\n                endAdornment={\r\n                  <InputAdornment\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showModal: true,\r\n                        modalTitle: \"Number of Usages\",\r\n                        modalBody:\r\n                          \"How many times this campaign code can be used before it is consumed.\",\r\n                      })\r\n                    }\r\n                    position=\"end\"\r\n                  >\r\n                    <IconButton edge=\"end\">\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n\r\n        {/* //Modal */}\r\n        <Dialog open={this.state.showModal}>\r\n          <DialogTitle>{this.state.modalTitle}</DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>{this.state.modalBody}</Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              className=\"noBorder\"\r\n              onClick={() => this.setState({ showModal: false })}\r\n              variant=\"contained\"\r\n            >\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  countries: state.countries,\r\n  currencies: state.currencies,\r\n  conditionTypes: state.conditionTypes,\r\n  actionTypes: state.actionTypes,\r\n  campaign: state.campaign,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCountries: () => dispatch(getCountries()),\r\n    getCurrencies: () => dispatch(getCurrencies()),\r\n    getActionTypes: () => dispatch(getActionTypes()),\r\n    getConditionTypes: () => dispatch(getConditionTypes()),\r\n    addCampaign: (data) => dispatch(addCampaign(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCampaign);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Paper,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n\r\nimport ReactDragListView from \"react-drag-listview\";\r\nimport ImportExport from \"@material-ui/icons/ImportExport\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getCampaigns,\r\n  getCampaign,\r\n  activateCampaign,\r\n} from \"../redux/actions/ActionCreator\";\r\n\r\nclass Campaigns extends Component {\r\n  state = {\r\n    reorder: false,\r\n    hideOptions: true,\r\n    selectedIndex: -1,\r\n    active: false,\r\n    data: this.props.campaigns,\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.getCampaigns();\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState({ data: props.campaigns });\r\n  }\r\n\r\n  render() {\r\n    const that = this;\r\n    const dragProps = {\r\n      onDragEnd(fromIndex, toIndex) {\r\n        const data = [...that.state.data];\r\n        const item = data.splice(fromIndex, 1)[0];\r\n        data.splice(toIndex, 0, item);\r\n        that.setState({ data });\r\n      },\r\n      nodeSelector: \"tr\",\r\n      handleSelector: \"section\",\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <Header\r\n          reorderData={this.state.data.map((m) => m.id)}\r\n          reorder={(reorder) => this.setState({ reorder })}\r\n          hideOptions={this.state.hideOptions}\r\n          id={this.props.campaign.id}\r\n          campaign={this.props.campaign}\r\n        />\r\n        <TableContainer className=\"marginTop\" component={Paper}>\r\n          <ReactDragListView {...dragProps}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Country</TableCell>\r\n                  <TableCell>Currency</TableCell>\r\n                  <TableCell>StartDate</TableCell>\r\n                  <TableCell>StartDate</TableCell>\r\n                  <TableCell align=\"right\">Active</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.data.map((c, index) => (\r\n                  <TableRow\r\n                    key={index}\r\n                    onClick={() => {\r\n                      this.props.getCampaign(c.id);\r\n                      this.setState({\r\n                        hideOptions: false,\r\n                        selectedIndex: index,\r\n                      });\r\n                    }}\r\n                    className={this.state.selectedIndex === index && \"blueBg\"}\r\n                  >\r\n                    <TableCell>{c.name}</TableCell>\r\n                    <TableCell>{c.countries[0].code}</TableCell>\r\n                    <TableCell>{c.currencies[0].code}</TableCell>\r\n                    <TableCell>{c.startDate}</TableCell>\r\n                    <TableCell>{c.endDate}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {this.state.reorder ? (\r\n                        <section>\r\n                          <ImportExport />\r\n                        </section>\r\n                      ) : (\r\n                        <Switch\r\n                          checked={c.isActive}\r\n                          onChange={() =>\r\n                            this.props.activateCampaign(c.id, !c.isActive)\r\n                          }\r\n                          // name=\"checkedB\"\r\n                          size=\"medium\"\r\n                          color=\"primary\"\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </ReactDragListView>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  campaigns: state.campaigns,\r\n  campaign: state.campaign,\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCampaigns: () => dispatch(getCampaigns()),\r\n    getCampaign: (id) => dispatch(getCampaign(id)),\r\n    activateCampaign: (id, val) => dispatch(activateCampaign(id, val)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Campaigns);\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport AddCampaign from \"../pages/AddCampaign\";\r\nimport Campaigns from \"../pages/Campaigns\";\r\n\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Campaigns} exact />\r\n          <Route path=\"/addCampaign\" component={AddCampaign} exact />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import ActionTypes from \"../actions/ActionTypes\";\n\nconst initialState = {\n  campaigns: [],\n  campaign: {},\n  countries: [],\n  currencies: [],\n  actionTypes: [],\n  conditionTypes: [],\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.GET_CAMPAIGNS:\n      return { ...state, campaigns: payload };\n    case ActionTypes.GET_CAMPAIGN:\n      return { ...state, campaign: payload };\n    case ActionTypes.GET_COUNTRIES:\n      return { ...state, countries: payload };\n    case ActionTypes.GET_CURRENCIES:\n      return { ...state, currencies: payload };\n    case ActionTypes.GET_CONDITION_TYPES:\n      return { ...state, conditionTypes: payload };\n    case ActionTypes.GET_ACTION_TYPES:\n      return { ...state, actionTypes: payload };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport RootReducer from \"../reducers/RootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(RootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    primary: {\r\n      main: \"#45AAF8\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      main: \"#FF675C\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Routes from \"./routes\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/Store\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport MyTheme from \"./utils/Theme\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={MyTheme}>\n        <Routes />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}